#include <Arduino.h>
#include <pwm.h>
#define PWM_CHANNELS 1

const uint32_t period = 200;  // * 200ns = 40us (25KHz)
// Duty cycle percentage values are divisions of 200

// const uint32_t period = 40;  // * 1us = 25KHz - SDK_PWM_PERIOD_COMPAT_MODE 1
// Duty cycle percentage values are divisions of 1000?

// const int fanPin = 4; 

// PWM setup
uint32 io_info[PWM_CHANNELS][3] = {
	// MUX, FUNC, PIN
	{PERIPHS_IO_MUX_GPIO5_U,  FUNC_GPIO5, 5},
	// {PERIPHS_IO_MUX_MTDO_U,  FUNC_GPIO15, 15},
	// {PERIPHS_IO_MUX_MTCK_U,  FUNC_GPIO13, 13},
	// {PERIPHS_IO_MUX_MTMS_U,  FUNC_GPIO14, 14},
	// {PERIPHS_IO_MUX_GPIO5_U, FUNC_GPIO5 ,  5},
};

// initial duty: all off
uint32 pwm_duty_init[PWM_CHANNELS] = {0};

void setup() {  
  Serial.begin(9600);
  Serial.println("\r\n");

  pwm_init(period, pwm_duty_init, PWM_CHANNELS, io_info);

  pwm_set_duty(100, 0); // 50%
  pwm_start();
}

void loop() {
  // uint32 currentDuty = pwm_get_duty(0);
  // Serial.println(currentDuty);
/* 
  Serial.println("Set duty (%):");
  // delay(1000);
  yield();

  for (size_t i = 0; i <= 10; i++)
  {
    int percent = i * 10;
    int duty_value = percent * 2; // Duty cycle percentage values are divisions of 200

    Serial.print(percent);
    Serial.print(" ");
    pwm_set_duty(duty_value, 0);
    pwm_start();
    delay(2000); // This will take 20 seconds to loop through 0-100
    yield();
  }
  Serial.println();
 */
  Serial.print(".");
  delay(1000);
  yield();
}